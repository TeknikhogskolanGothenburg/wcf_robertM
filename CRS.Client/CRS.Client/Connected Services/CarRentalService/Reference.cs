//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRS.Client.CarRentalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/Context")]
    [System.SerializableAttribute()]
    public partial class Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegnumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regnumber {
            get {
                return this.RegnumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegnumberField, value) != true)) {
                    this.RegnumberField = value;
                    this.RaisePropertyChanged("Regnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Context")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CRS.Client.CarRentalService.Reservation[] ReservationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CRS.Client.CarRentalService.Reservation[] Reservations {
            get {
                return this.ReservationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservationsField, value) != true)) {
                    this.ReservationsField = value;
                    this.RaisePropertyChanged("Reservations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reservation", Namespace="http://schemas.datacontract.org/2004/07/Context")]
    [System.SerializableAttribute()]
    public partial class Reservation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CRS.Client.CarRentalService.Car CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CRS.Client.CarRentalService.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReturnedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CRS.Client.CarRentalService.Car Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CRS.Client.CarRentalService.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Returned {
            get {
                return this.ReturnedField;
            }
            set {
                if ((this.ReturnedField.Equals(value) != true)) {
                    this.ReturnedField = value;
                    this.RaisePropertyChanged("Returned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarRentalService.ICarRentalService")]
    public interface ICarRentalService {
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetAllCars", ReplyAction="http://tempuri.org/ICarRentalService/GetAllCarsResponse")]
        CRS.Client.CarRentalService.Car[] GetAllCars();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetAllCars", ReplyAction="http://tempuri.org/ICarRentalService/GetAllCarsResponse")]
        System.Threading.Tasks.Task<CRS.Client.CarRentalService.Car[]> GetAllCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetCarById", ReplyAction="http://tempuri.org/ICarRentalService/GetCarByIdResponse")]
        CRS.Client.CarRentalService.Car GetCarById(int id);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetCarById", ReplyAction="http://tempuri.org/ICarRentalService/GetCarByIdResponse")]
        System.Threading.Tasks.Task<CRS.Client.CarRentalService.Car> GetCarByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetCarByRegnum", ReplyAction="http://tempuri.org/ICarRentalService/GetCarByRegnumResponse")]
        CRS.Client.CarRentalService.CarResult GetCarByRegnum(CRS.Client.CarRentalService.CarRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetCarByRegnum", ReplyAction="http://tempuri.org/ICarRentalService/GetCarByRegnumResponse")]
        System.Threading.Tasks.Task<CRS.Client.CarRentalService.CarResult> GetCarByRegnumAsync(CRS.Client.CarRentalService.CarRequest request);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/ICarRentalService/AddCar", ReplyAction="http://tempuri.org/ICarRentalService/AddCarResponse")]
        bool AddCar(CRS.Client.CarRentalService.Car car);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/ICarRentalService/AddCar", ReplyAction="http://tempuri.org/ICarRentalService/AddCarResponse")]
        System.Threading.Tasks.Task<bool> AddCarAsync(CRS.Client.CarRentalService.Car car);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/ICarRentalService/DeleteCar", ReplyAction="http://tempuri.org/ICarRentalService/DeleteCarResponse")]
        bool DeleteCar(CRS.Client.CarRentalService.Car car);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/ICarRentalService/DeleteCar", ReplyAction="http://tempuri.org/ICarRentalService/DeleteCarResponse")]
        System.Threading.Tasks.Task<bool> DeleteCarAsync(CRS.Client.CarRentalService.Car car);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetAllCustomers", ReplyAction="http://tempuri.org/ICarRentalService/GetAllCustomersResponse")]
        CRS.Client.CarRentalService.Customer[] GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetAllCustomers", ReplyAction="http://tempuri.org/ICarRentalService/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<CRS.Client.CarRentalService.Customer[]> GetAllCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/AddCustomer", ReplyAction="http://tempuri.org/ICarRentalService/AddCustomerResponse")]
        bool AddCustomer(CRS.Client.CarRentalService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/AddCustomer", ReplyAction="http://tempuri.org/ICarRentalService/AddCustomerResponse")]
        System.Threading.Tasks.Task<bool> AddCustomerAsync(CRS.Client.CarRentalService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/DeleteCustomer", ReplyAction="http://tempuri.org/ICarRentalService/DeleteCustomerResponse")]
        bool DeleteCustomer(CRS.Client.CarRentalService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/DeleteCustomer", ReplyAction="http://tempuri.org/ICarRentalService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<bool> DeleteCustomerAsync(CRS.Client.CarRentalService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetAllReservations", ReplyAction="http://tempuri.org/ICarRentalService/GetAllReservationsResponse")]
        CRS.Client.CarRentalService.Reservation[] GetAllReservations();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetAllReservations", ReplyAction="http://tempuri.org/ICarRentalService/GetAllReservationsResponse")]
        System.Threading.Tasks.Task<CRS.Client.CarRentalService.Reservation[]> GetAllReservationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetAvaibleCars", ReplyAction="http://tempuri.org/ICarRentalService/GetAvaibleCarsResponse")]
        CRS.Client.CarRentalService.Car[] GetAvaibleCars(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/GetAvaibleCars", ReplyAction="http://tempuri.org/ICarRentalService/GetAvaibleCarsResponse")]
        System.Threading.Tasks.Task<CRS.Client.CarRentalService.Car[]> GetAvaibleCarsAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/AddReservation", ReplyAction="http://tempuri.org/ICarRentalService/AddReservationResponse")]
        bool AddReservation(CRS.Client.CarRentalService.Reservation reservation);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/AddReservation", ReplyAction="http://tempuri.org/ICarRentalService/AddReservationResponse")]
        System.Threading.Tasks.Task<bool> AddReservationAsync(CRS.Client.CarRentalService.Reservation reservation);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/DeleteReservation", ReplyAction="http://tempuri.org/ICarRentalService/DeleteReservationResponse")]
        bool DeleteReservation(CRS.Client.CarRentalService.Reservation reservation);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/DeleteReservation", ReplyAction="http://tempuri.org/ICarRentalService/DeleteReservationResponse")]
        System.Threading.Tasks.Task<bool> DeleteReservationAsync(CRS.Client.CarRentalService.Reservation reservation);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/FinishReservation", ReplyAction="http://tempuri.org/ICarRentalService/FinishReservationResponse")]
        bool FinishReservation(CRS.Client.CarRentalService.Reservation reservation);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ICarRentalService/FinishReservation", ReplyAction="http://tempuri.org/ICarRentalService/FinishReservationResponse")]
        System.Threading.Tasks.Task<bool> FinishReservationAsync(CRS.Client.CarRentalService.Reservation reservation);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CarRequestObject", WrapperNamespace="http://audhumbla.xyz/Car", IsWrapped=true)]
    public partial class CarRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://audhumbla.xyz/Car", Order=0)]
        public string LicenseKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://audhumbla.xyz/Car", Order=1)]
        public string Regnumber;
        
        public CarRequest() {
        }
        
        public CarRequest(string LicenseKey, string Regnumber) {
            this.LicenseKey = LicenseKey;
            this.Regnumber = Regnumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CarInfoObject", WrapperNamespace="http://audhumbla.xyz/Car", IsWrapped=true)]
    public partial class CarResult {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://audhumbla.xyz/Car", Order=0)]
        public int Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://audhumbla.xyz/Car", Order=1)]
        public string Brand;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://audhumbla.xyz/Car", Order=2)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://audhumbla.xyz/Car", Order=3)]
        public int Year;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://audhumbla.xyz/Car", Order=4)]
        public string Regnumber;
        
        public CarResult() {
        }
        
        public CarResult(int Id, string Brand, string Model, int Year, string Regnumber) {
            this.Id = Id;
            this.Brand = Brand;
            this.Model = Model;
            this.Year = Year;
            this.Regnumber = Regnumber;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarRentalServiceChannel : CRS.Client.CarRentalService.ICarRentalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarRentalServiceClient : System.ServiceModel.ClientBase<CRS.Client.CarRentalService.ICarRentalService>, CRS.Client.CarRentalService.ICarRentalService {
        
        public CarRentalServiceClient() {
        }
        
        public CarRentalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarRentalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarRentalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarRentalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CRS.Client.CarRentalService.Car[] GetAllCars() {
            return base.Channel.GetAllCars();
        }
        
        public System.Threading.Tasks.Task<CRS.Client.CarRentalService.Car[]> GetAllCarsAsync() {
            return base.Channel.GetAllCarsAsync();
        }
        
        public CRS.Client.CarRentalService.Car GetCarById(int id) {
            return base.Channel.GetCarById(id);
        }
        
        public System.Threading.Tasks.Task<CRS.Client.CarRentalService.Car> GetCarByIdAsync(int id) {
            return base.Channel.GetCarByIdAsync(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CRS.Client.CarRentalService.CarResult CRS.Client.CarRentalService.ICarRentalService.GetCarByRegnum(CRS.Client.CarRentalService.CarRequest request) {
            return base.Channel.GetCarByRegnum(request);
        }
        
        public int GetCarByRegnum(string LicenseKey, ref string Regnumber, out string Brand, out string Model, out int Year) {
            CRS.Client.CarRentalService.CarRequest inValue = new CRS.Client.CarRentalService.CarRequest();
            inValue.LicenseKey = LicenseKey;
            inValue.Regnumber = Regnumber;
            CRS.Client.CarRentalService.CarResult retVal = ((CRS.Client.CarRentalService.ICarRentalService)(this)).GetCarByRegnum(inValue);
            Brand = retVal.Brand;
            Model = retVal.Model;
            Year = retVal.Year;
            Regnumber = retVal.Regnumber;
            return retVal.Id;
        }
        
        public System.Threading.Tasks.Task<CRS.Client.CarRentalService.CarResult> GetCarByRegnumAsync(CRS.Client.CarRentalService.CarRequest request) {
            return base.Channel.GetCarByRegnumAsync(request);
        }
        
        public bool AddCar(CRS.Client.CarRentalService.Car car) {
            return base.Channel.AddCar(car);
        }
        
        public System.Threading.Tasks.Task<bool> AddCarAsync(CRS.Client.CarRentalService.Car car) {
            return base.Channel.AddCarAsync(car);
        }
        
        public bool DeleteCar(CRS.Client.CarRentalService.Car car) {
            return base.Channel.DeleteCar(car);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCarAsync(CRS.Client.CarRentalService.Car car) {
            return base.Channel.DeleteCarAsync(car);
        }
        
        public CRS.Client.CarRentalService.Customer[] GetAllCustomers() {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<CRS.Client.CarRentalService.Customer[]> GetAllCustomersAsync() {
            return base.Channel.GetAllCustomersAsync();
        }
        
        public bool AddCustomer(CRS.Client.CarRentalService.Customer customer) {
            return base.Channel.AddCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<bool> AddCustomerAsync(CRS.Client.CarRentalService.Customer customer) {
            return base.Channel.AddCustomerAsync(customer);
        }
        
        public bool DeleteCustomer(CRS.Client.CarRentalService.Customer customer) {
            return base.Channel.DeleteCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCustomerAsync(CRS.Client.CarRentalService.Customer customer) {
            return base.Channel.DeleteCustomerAsync(customer);
        }
        
        public CRS.Client.CarRentalService.Reservation[] GetAllReservations() {
            return base.Channel.GetAllReservations();
        }
        
        public System.Threading.Tasks.Task<CRS.Client.CarRentalService.Reservation[]> GetAllReservationsAsync() {
            return base.Channel.GetAllReservationsAsync();
        }
        
        public CRS.Client.CarRentalService.Car[] GetAvaibleCars(System.DateTime start, System.DateTime end) {
            return base.Channel.GetAvaibleCars(start, end);
        }
        
        public System.Threading.Tasks.Task<CRS.Client.CarRentalService.Car[]> GetAvaibleCarsAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetAvaibleCarsAsync(start, end);
        }
        
        public bool AddReservation(CRS.Client.CarRentalService.Reservation reservation) {
            return base.Channel.AddReservation(reservation);
        }
        
        public System.Threading.Tasks.Task<bool> AddReservationAsync(CRS.Client.CarRentalService.Reservation reservation) {
            return base.Channel.AddReservationAsync(reservation);
        }
        
        public bool DeleteReservation(CRS.Client.CarRentalService.Reservation reservation) {
            return base.Channel.DeleteReservation(reservation);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteReservationAsync(CRS.Client.CarRentalService.Reservation reservation) {
            return base.Channel.DeleteReservationAsync(reservation);
        }
        
        public bool FinishReservation(CRS.Client.CarRentalService.Reservation reservation) {
            return base.Channel.FinishReservation(reservation);
        }
        
        public System.Threading.Tasks.Task<bool> FinishReservationAsync(CRS.Client.CarRentalService.Reservation reservation) {
            return base.Channel.FinishReservationAsync(reservation);
        }
    }
}
